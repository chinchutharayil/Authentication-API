[2022-10-30 17:29:11.963 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 17:29:12.293 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 17:29:12.448 +03:00  INF]  Initializing UI Database
[2022-10-30 17:29:13.291 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 17:29:13.644 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:29:14.885 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:29:14.888 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 17:29:14.958 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:29:14.959 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:29:24.963 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:29:25.011 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:29:25.011 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:29:25.016 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:29:25.016 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:29:35.025 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:29:35.071 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:29:35.072 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:29:35.072 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:29:35.072 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:29:45.080 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:29:45.085 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:29:45.086 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:29:45.086 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:29:45.086 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:29:55.087 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:29:55.092 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:29:55.092 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:29:55.092 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:29:55.092 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:30:05.114 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:30:05.119 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:30:05.120 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:30:05.120 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:30:05.120 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:30:15.122 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:30:15.133 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:30:15.133 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:30:15.134 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:30:15.134 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:30:25.144 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:30:25.153 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:30:25.154 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:30:25.154 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:30:25.154 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:30:35.181 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:30:35.186 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:30:35.187 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:30:35.187 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:30:35.187 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:30:45.204 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:30:45.210 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:30:45.210 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:30:45.210 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:30:45.210 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:30:55.220 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:30:55.230 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:30:55.231 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:30:55.231 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:30:55.231 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:31:05.257 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:31:05.267 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:31:05.268 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:31:05.268 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:31:05.268 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:31:15.275 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:31:15.292 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:31:15.292 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:31:15.293 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:31:15.293 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:31:25.320 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:31:25.331 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:31:25.331 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:31:25.331 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:31:25.332 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:31:35.343 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:31:35.349 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:31:35.349 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:31:35.349 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:31:35.350 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:31:45.369 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:31:45.373 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:31:45.374 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:31:45.374 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:31:45.375 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:31:55.399 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:31:55.404 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:31:55.404 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:31:55.405 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:31:55.405 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:32:05.423 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:32:05.428 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:32:05.429 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:32:05.429 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:32:05.430 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:32:16.598 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:32:16.607 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:32:16.607 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:32:16.608 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:32:16.608 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:32:27.300 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:32:27.426 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:32:27.450 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:32:27.473 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:32:27.474 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:32:42.030 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:32:43.938 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:32:43.939 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:32:44.322 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:32:44.323 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:32:53.857 +03:00  ERR]  Failed executing DbCommand (7ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime), @p4='?' (DbType = Int32), @p5='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Identity].[Tenant] ([CreatedBy], [CreatedDate], [LastModifiedBy], [LastModifiedDate], [Status], [TenantName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT [Id]
FROM [Identity].[Tenant]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
[2022-10-30 17:32:53.967 +03:00  ERR]  An exception occurred in the database while saving changes for context type 'Identity.API.Data.IdentityContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
[2022-10-30 17:32:54.549 +03:00  ERR]  An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Identity.API.Infrastructure.UnitOfWork.CompleteAsync() in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Infrastructure\UnitOfWork.cs:line 38
   at Identity.API.Services.Implementations.AccountService.RegisterTenantAsync(RegisterRequestTenant request, String origin) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Services\Implementations\AccountService.cs:line 99
   at Identity.API.Controllers.AccountController.RegisterTenantAsync(RegisterRequestTenant request) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 59
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
[2022-10-30 17:32:56.892 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:32:58.131 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:32:59.205 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:32:59.894 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:32:59.895 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:33:10.875 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:33:10.881 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:33:10.882 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:33:10.882 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:33:10.882 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:33:20.896 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:33:20.905 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:33:20.905 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:33:20.906 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:33:20.906 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:33:30.908 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:33:30.917 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:33:30.918 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:33:30.918 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:33:30.919 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:33:40.937 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:33:40.942 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:33:40.942 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:33:40.942 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:33:40.943 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:33:50.955 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:33:50.963 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:33:50.964 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:33:50.964 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:33:50.964 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:34:00.989 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:34:00.995 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:34:00.996 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:34:00.996 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:34:00.996 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:34:11.020 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:34:11.028 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:34:11.028 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:34:11.029 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:34:11.029 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:34:21.051 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:34:21.056 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:34:21.056 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:34:21.057 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:34:21.057 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:34:31.061 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:34:31.068 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:34:31.068 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:34:31.068 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:34:31.069 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:34:41.077 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:34:41.082 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:34:41.083 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:34:41.083 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:34:41.083 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:34:51.104 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:34:51.112 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:34:51.112 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:34:51.112 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:34:51.113 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:35:01.125 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:35:01.130 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:35:01.130 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:35:01.131 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:35:01.131 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:35:11.146 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:35:11.151 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:35:11.151 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:35:11.152 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:35:11.152 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:35:21.153 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:35:21.169 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:35:21.169 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:35:21.170 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:35:21.170 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:35:31.195 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:35:31.205 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:35:31.205 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:35:31.206 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:35:31.206 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:35:41.218 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:35:41.223 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:35:41.224 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:35:41.225 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:35:41.225 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:35:51.241 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:35:51.246 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:35:51.247 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:35:51.247 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:35:51.247 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:36:01.263 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:36:01.271 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:36:01.271 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:36:01.272 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:36:01.272 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:36:11.284 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:36:11.290 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:36:11.291 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:36:11.291 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:36:11.291 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:36:21.305 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:36:21.310 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:36:21.311 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:36:21.311 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:36:21.311 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:36:31.324 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:36:31.333 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:36:31.334 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:36:31.334 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:36:31.334 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:36:41.344 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:36:41.350 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:36:41.350 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:36:41.351 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:36:41.351 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:36:51.355 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:36:51.363 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:36:51.364 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:36:51.364 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:36:51.364 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:37:01.376 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:37:01.380 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:37:01.381 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:37:01.381 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:37:01.381 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:37:11.392 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:37:11.397 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:37:11.398 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:37:11.398 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:37:11.398 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:37:21.408 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:37:21.423 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:37:21.424 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:37:21.424 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:37:21.426 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:37:31.426 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:37:31.431 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:37:31.432 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:37:31.432 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:37:31.432 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:37:41.438 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:37:41.443 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:37:41.444 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:37:41.444 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:37:41.444 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:37:51.449 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:37:51.454 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:37:51.454 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:37:51.455 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:37:51.455 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:38:01.460 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:38:01.469 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:38:01.469 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:38:01.470 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:38:01.470 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:38:11.472 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:38:11.476 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:38:11.476 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:38:11.477 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:38:11.477 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:38:21.483 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:38:21.489 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:38:21.489 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:38:21.490 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:38:21.490 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:38:31.500 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:38:31.507 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:38:31.507 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:38:31.508 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:38:31.508 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:38:46.597 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 17:38:46.808 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 17:38:46.883 +03:00  INF]  Initializing UI Database
[2022-10-30 17:38:47.662 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 17:38:47.930 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:38:49.065 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:38:49.070 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 17:38:49.130 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:38:49.130 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:38:59.136 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:38:59.181 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:38:59.182 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:38:59.186 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:38:59.186 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:39:12.367 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:39:23.863 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:39:23.864 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:39:23.920 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:39:23.921 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:40:25.246 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:40:27.394 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:40:29.014 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:40:29.015 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:40:29.015 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:40:32.749 +03:00  ERR]  Failed executing DbCommand (46ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Identity].[Tenant] ([CreatedBy], [LastModifiedBy], [LastModifiedDate], [Status], [TenantName])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [Id], [CreatedDate]
FROM [Identity].[Tenant]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
[2022-10-30 17:40:32.808 +03:00  ERR]  An exception occurred in the database while saving changes for context type 'Identity.API.Data.IdentityContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'CreatedDate', table 'IdentityManager.Identity.Tenant'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:776b3945-e782-4da2-854e-ba9944d395a3
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'CreatedDate', table 'IdentityManager.Identity.Tenant'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:776b3945-e782-4da2-854e-ba9944d395a3
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
[2022-10-30 17:40:33.425 +03:00  ERR]  An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'CreatedDate', table 'IdentityManager.Identity.Tenant'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:776b3945-e782-4da2-854e-ba9944d395a3
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Identity.API.Infrastructure.UnitOfWork.CompleteAsync() in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Infrastructure\UnitOfWork.cs:line 38
   at Identity.API.Services.Implementations.AccountService.RegisterTenantAsync(RegisterRequestTenant request, String origin) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Services\Implementations\AccountService.cs:line 99
   at Identity.API.Controllers.AccountController.RegisterTenantAsync(RegisterRequestTenant request) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 59
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
[2022-10-30 17:40:39.114 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:40:39.127 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:40:39.127 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:40:39.128 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:40:39.128 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:40:51.022 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:40:51.044 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:40:51.044 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:40:51.045 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:40:51.045 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:41:01.059 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:41:01.071 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:41:01.071 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:41:01.071 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:41:01.072 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:41:11.086 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:41:11.095 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:41:11.096 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:41:11.096 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:41:11.096 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:41:21.109 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:41:21.124 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:41:21.125 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:41:21.126 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:41:21.126 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:41:31.143 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:41:31.152 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:41:31.152 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:41:31.153 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:41:31.153 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:41:41.163 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:41:41.173 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:41:41.174 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:41:41.174 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:41:41.175 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:41:51.186 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:41:51.191 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:41:51.192 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:41:51.192 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:41:51.192 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:42:01.202 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:42:01.212 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:42:01.213 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:42:01.214 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:42:01.214 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:42:11.228 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:42:11.237 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:42:11.238 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:42:11.238 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:42:11.238 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:42:21.250 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:42:21.255 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:42:21.255 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:42:21.256 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:42:21.256 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:42:31.264 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:42:31.274 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:42:31.275 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:42:31.275 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:42:31.275 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:42:41.291 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:42:41.305 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:42:41.305 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:42:41.306 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:42:41.306 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:42:51.320 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:42:51.335 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:42:51.336 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:42:51.336 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:42:51.336 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:47:00.325 +03:00  FTL]  Program terminated unexpectedly (Identity.API)!
Microsoft.Extensions.Hosting.HostFactoryResolver+HostingListener+StopTheHostException: Exception of type 'Microsoft.Extensions.Hosting.HostFactoryResolver+HostingListener+StopTheHostException' was thrown.
   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.OnNext(KeyValuePair`2 value)
   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()
   at Program.<Main>$(String[] args) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 46
[2022-10-30 17:47:27.191 +03:00  FTL]  Program terminated unexpectedly (Identity.API)!
Microsoft.Extensions.Hosting.HostFactoryResolver+HostingListener+StopTheHostException: Exception of type 'Microsoft.Extensions.Hosting.HostFactoryResolver+HostingListener+StopTheHostException' was thrown.
   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.OnNext(KeyValuePair`2 value)
   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()
   at Program.<Main>$(String[] args) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 46
[2022-10-30 17:48:49.229 +03:00  FTL]  Program terminated unexpectedly (Identity.API)!
Microsoft.Extensions.Hosting.HostFactoryResolver+HostingListener+StopTheHostException: Exception of type 'Microsoft.Extensions.Hosting.HostFactoryResolver+HostingListener+StopTheHostException' was thrown.
   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.OnNext(KeyValuePair`2 value)
   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()
   at Program.<Main>$(String[] args) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 46
[2022-10-30 17:49:16.006 +03:00  FTL]  Program terminated unexpectedly (Identity.API)!
Microsoft.Extensions.Hosting.HostFactoryResolver+HostingListener+StopTheHostException: Exception of type 'Microsoft.Extensions.Hosting.HostFactoryResolver+HostingListener+StopTheHostException' was thrown.
   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.OnNext(KeyValuePair`2 value)
   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()
   at Program.<Main>$(String[] args) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 46
[2022-10-30 17:49:55.915 +03:00  FTL]  Program terminated unexpectedly (Identity.API)!
Microsoft.Extensions.Hosting.HostFactoryResolver+HostingListener+StopTheHostException: Exception of type 'Microsoft.Extensions.Hosting.HostFactoryResolver+HostingListener+StopTheHostException' was thrown.
   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.OnNext(KeyValuePair`2 value)
   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()
   at Program.<Main>$(String[] args) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 46
[2022-10-30 17:52:06.468 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 17:52:06.666 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 17:52:06.751 +03:00  INF]  Initializing UI Database
[2022-10-30 17:52:07.573 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 17:52:07.849 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:52:09.060 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:52:09.064 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 17:52:09.132 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:52:09.133 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:52:19.144 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:52:19.180 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:52:19.181 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:52:19.185 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:52:19.186 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:52:29.805 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:52:29.853 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:52:29.853 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:52:29.854 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:52:29.854 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:52:40.041 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:52:40.447 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:52:40.448 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:52:40.524 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:52:40.524 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:52:50.526 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:52:50.540 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:52:50.540 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:52:50.540 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:52:50.541 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:53:00.543 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:53:00.553 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:53:00.553 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:53:00.554 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:53:00.554 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:53:10.561 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:53:10.572 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:53:10.573 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:53:10.573 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:53:10.573 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:53:20.601 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:53:20.620 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:53:20.620 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:53:20.621 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:53:20.621 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:53:30.646 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:53:30.654 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:53:30.654 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:53:30.655 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:53:30.655 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:53:40.676 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:53:40.686 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:53:40.686 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:53:40.686 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:53:40.687 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:53:50.709 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:53:50.719 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:53:50.719 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:53:50.719 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:53:50.720 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:54:00.730 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:54:00.737 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:54:00.738 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:54:00.738 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:54:00.738 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:54:10.751 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:54:10.766 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:54:10.766 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:54:10.768 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:54:10.768 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:54:20.770 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:54:20.776 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:54:20.776 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:54:20.777 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:54:20.777 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:54:30.798 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:54:30.804 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:54:30.804 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:54:30.804 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:54:30.805 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:54:39.708 +03:00  ERR]  An unhandled exception has occurred while executing the request.
Identity.API.Exceptions.ApiException: Tenant 'Nabina Group' already exists.
   at Identity.API.Services.Implementations.AccountService.RegisterTenantAsync(RegisterRequestTenant request, String origin) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Services\Implementations\AccountService.cs:line 92
   at Identity.API.Controllers.AccountController.RegisterTenantAsync(RegisterRequestTenant request) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 59
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
[2022-10-30 17:54:40.810 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:54:40.823 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:54:40.824 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:54:40.824 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:54:40.824 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:54:50.830 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:54:50.836 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:54:50.836 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:54:50.837 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:54:50.837 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:55:00.844 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:55:22.182 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:55:22.182 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:55:22.183 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:55:22.183 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:55:32.201 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:55:32.211 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:55:32.212 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:55:32.212 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:55:32.212 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:55:42.225 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:55:45.339 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:55:45.340 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:55:45.340 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:55:45.340 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:55:55.351 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:55:55.357 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:55:55.358 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:55:55.358 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:55:55.358 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:56:05.366 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:56:05.374 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:56:05.374 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:56:05.375 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:56:05.375 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:56:15.377 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:56:15.399 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:56:15.399 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:56:15.400 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:56:15.400 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:56:25.412 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:56:25.423 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:56:25.424 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:56:25.424 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:56:25.425 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:56:35.445 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:56:35.451 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:56:35.451 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:56:35.451 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:56:35.452 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:56:45.473 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:56:45.482 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:56:45.483 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:56:45.483 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:56:45.483 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:56:55.494 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:56:55.502 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:56:55.502 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:56:55.503 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:56:55.503 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:57:05.503 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:57:05.508 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:57:05.509 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:57:05.510 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:57:05.510 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:57:15.515 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:57:15.524 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:57:15.525 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:57:15.525 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:57:15.525 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:57:25.530 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:57:25.536 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:57:25.537 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:57:25.537 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:57:25.538 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:57:35.547 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:57:35.552 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:57:35.552 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:57:35.553 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:57:35.553 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:57:45.564 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:57:45.570 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:57:45.570 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:57:45.571 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:57:45.571 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:57:55.573 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:57:55.580 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:57:55.581 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:57:55.581 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:57:55.581 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:58:05.598 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:58:05.608 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:58:05.608 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:58:05.608 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:58:05.609 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:58:15.621 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:58:15.635 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:58:15.635 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:58:15.636 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:58:15.636 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:58:25.639 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:58:25.643 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:58:25.644 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:58:25.644 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:58:25.644 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:58:35.652 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:58:35.662 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:58:35.662 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:58:35.663 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:58:35.663 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:58:45.668 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:58:45.673 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:58:45.674 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:58:45.674 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:58:45.674 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:58:55.688 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:58:55.698 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:58:55.699 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:58:55.699 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:58:55.699 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:59:05.725 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:59:05.731 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:59:05.731 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:59:05.732 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:59:05.732 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:59:15.733 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:59:15.741 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:59:15.741 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:59:15.742 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:59:15.742 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:59:25.752 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:59:25.757 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:59:25.758 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:59:25.758 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:59:25.758 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:59:35.776 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:59:35.784 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:59:35.784 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:59:35.785 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:59:35.785 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:59:45.804 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:59:45.813 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:59:45.814 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:59:45.814 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:59:45.814 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 17:59:55.821 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 17:59:55.830 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 17:59:55.831 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 17:59:55.831 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 17:59:55.831 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:00:05.854 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:00:05.859 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:00:05.859 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:00:05.860 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:00:05.860 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:00:15.872 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:00:15.885 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:00:15.886 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:00:15.886 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:00:15.886 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:00:25.886 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:00:25.891 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:00:25.891 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:00:25.892 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:00:25.892 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:00:35.912 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:00:35.918 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:00:35.919 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:00:35.919 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:00:35.919 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:00:45.938 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:00:45.949 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:00:45.949 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:00:45.950 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:00:45.950 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:00:55.967 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:00:55.973 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:00:55.973 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:00:55.973 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:00:55.974 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:01:05.981 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:01:05.986 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:01:05.987 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:01:05.987 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:01:05.987 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:01:16.007 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:01:16.013 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:01:16.013 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:01:16.013 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:01:16.014 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:01:26.032 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:01:26.037 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:01:26.037 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:01:26.038 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:01:26.038 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:01:36.044 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:01:36.050 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:01:36.050 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:01:36.051 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:01:36.051 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:01:46.062 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:01:46.070 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:01:46.071 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:01:46.071 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:01:46.071 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:01:56.076 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:01:56.082 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:01:56.082 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:01:56.082 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:01:56.083 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:02:06.093 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:02:06.098 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:02:06.098 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:02:06.099 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:02:06.099 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:02:16.108 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:02:16.121 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:02:16.122 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:02:16.122 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:02:16.122 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:02:26.145 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:02:26.154 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:02:26.155 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:02:26.155 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:02:26.155 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:02:36.171 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:02:36.177 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:02:36.177 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:02:36.178 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:02:36.178 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:02:46.184 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:02:46.189 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:02:46.190 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:02:46.190 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:02:46.190 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:02:56.194 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:02:56.199 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:02:56.200 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:02:56.200 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:02:56.200 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:03:06.207 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:03:06.212 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:03:06.213 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:03:06.213 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:03:06.213 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:03:16.215 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:03:16.222 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:03:16.223 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:03:16.224 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:03:16.224 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:03:26.237 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:03:26.242 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:03:26.242 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:03:26.243 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:03:26.243 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:03:36.251 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:03:36.256 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:03:36.256 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:03:36.257 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:03:36.257 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:03:46.265 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:03:46.270 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:03:46.270 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:03:46.270 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:03:46.271 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:03:56.282 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:03:56.289 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:03:56.289 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:03:56.289 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:03:56.290 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:04:06.298 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:04:06.305 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:04:06.305 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:04:06.306 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:04:06.306 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:04:16.312 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:04:16.324 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:04:16.325 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:04:16.325 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:04:16.325 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:04:26.340 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:04:26.349 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:04:26.350 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:04:26.350 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:04:26.350 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:04:36.359 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:04:36.365 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:04:36.365 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:04:36.365 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:04:36.366 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:04:46.382 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:04:46.392 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:04:46.393 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:04:46.394 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:04:46.394 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:04:56.400 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:04:56.406 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:04:56.406 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:04:56.407 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:04:56.407 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:05:06.408 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:05:06.414 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:05:06.414 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:05:06.414 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:05:06.415 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:05:16.422 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:05:16.427 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:05:16.427 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:05:16.428 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:05:16.428 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 18:05:26.447 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 18:05:26.453 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 18:05:26.453 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 18:05:26.454 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 18:05:26.454 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:02:17.968 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:02:18.122 +03:00  FTL]  Program terminated unexpectedly (Identity.API)!
System.ArgumentException: The type 'Identity.API.Filters.ExceptionFilter.HttpExceptionFilter' must derive from 'Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata'. (Parameter 'filterType')
   at Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add(Type filterType, Int32 order)
   at Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add(Type filterType)
   at Program.<>c.<<Main>$>b__0_2(MvcOptions configure) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 38
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.<>c.<AddMvcCoreServices>b__5_0(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.GetOrCreateDataSource(IEndpointRouteBuilder endpoints)
   at Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapDefaultControllerRoute(IEndpointRouteBuilder endpoints)
   at Program.<>c.<<Main>$>b__0_4(IEndpointRouteBuilder endpoints) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 133
   at Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(IApplicationBuilder builder, Action`1 configure)
   at Program.<Main>$(String[] args) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 131
[2022-10-30 19:02:34.731 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:02:34.890 +03:00  FTL]  Program terminated unexpectedly (Identity.API)!
System.ArgumentException: The type 'Identity.API.Filters.ExceptionFilter.HttpExceptionFilter' must derive from 'Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata'. (Parameter 'filterType')
   at Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add(Type filterType, Int32 order)
   at Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add(Type filterType)
   at Program.<>c.<<Main>$>b__0_2(MvcOptions configure) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 38
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.<>c.<AddMvcCoreServices>b__5_0(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.GetOrCreateDataSource(IEndpointRouteBuilder endpoints)
   at Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapDefaultControllerRoute(IEndpointRouteBuilder endpoints)
   at Program.<>c.<<Main>$>b__0_4(IEndpointRouteBuilder endpoints) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 133
   at Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(IApplicationBuilder builder, Action`1 configure)
   at Program.<Main>$(String[] args) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Program.cs:line 131
[2022-10-30 19:03:01.243 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:05:37.503 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:05:40.392 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 19:05:40.857 +03:00  INF]  Initializing UI Database
[2022-10-30 19:05:41.658 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 19:05:41.968 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:05:43.102 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:05:43.106 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 19:05:43.171 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:05:43.172 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:05:53.196 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:05:53.238 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:05:53.239 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:05:53.244 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:05:53.244 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:06:03.254 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:06:03.303 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:06:03.303 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:06:03.304 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:06:03.304 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:06:14.312 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:06:16.143 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:06:16.144 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:06:16.144 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:06:16.144 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:06:26.625 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:06:26.692 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:06:26.693 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:06:26.693 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:06:26.693 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:06:34.641 +03:00  ERR]  Tenant 'Nabina Group' already exists.
Identity.API.Exceptions.ApiException: Tenant 'Nabina Group' already exists.
   at Identity.API.Services.Implementations.AccountService.RegisterTenantAsync(RegisterRequestTenant request, String origin) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Services\Implementations\AccountService.cs:line 92
   at Identity.API.Controllers.AccountController.RegisterTenantAsync(RegisterRequestTenant request) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 59
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
[2022-10-30 19:06:36.728 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:06:39.424 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:06:39.485 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:06:39.485 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:06:39.486 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:06:51.459 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:07:06.687 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:07:06.748 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:07:08.515 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:07:08.516 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:07:19.246 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:07:21.148 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:07:21.148 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:07:21.149 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:07:21.149 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:07:31.151 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:07:31.165 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:07:31.165 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:07:31.166 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:07:31.166 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:07:41.172 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:07:41.177 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:07:41.177 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:07:41.178 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:07:41.178 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:07:51.191 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:07:51.209 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:07:51.209 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:07:51.210 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:07:51.210 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:08:01.217 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:08:01.223 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:08:01.224 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:08:01.224 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:08:01.224 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:08:11.232 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:08:11.237 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:08:11.238 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:08:11.238 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:08:11.238 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:08:21.260 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:08:21.265 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:08:21.266 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:08:21.266 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:08:21.266 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:08:31.269 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:08:31.277 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:08:31.277 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:08:31.278 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:08:31.278 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:08:41.296 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:08:41.302 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:08:41.303 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:08:41.303 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:08:41.303 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:08:51.320 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:08:51.324 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:08:51.325 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:08:51.325 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:08:51.325 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:09:10.885 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:09:12.442 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 19:09:12.516 +03:00  INF]  Initializing UI Database
[2022-10-30 19:09:13.311 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 19:09:13.586 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:09:14.739 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:09:14.742 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 19:09:14.802 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:09:14.803 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:09:24.816 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:09:24.871 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:09:24.872 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:09:24.877 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:09:24.877 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:09:34.882 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:09:34.931 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:09:34.932 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:09:34.932 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:09:34.932 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:09:44.939 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:09:44.956 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:09:44.957 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:09:44.957 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:09:44.957 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:09:54.969 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:09:54.976 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:09:54.976 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:09:54.976 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:09:54.977 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:10:04.994 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:10:04.998 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:10:04.999 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:10:04.999 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:10:04.999 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:10:15.025 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:10:15.032 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:10:15.032 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:10:15.033 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:10:15.033 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:10:25.049 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:10:25.056 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:10:25.056 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:10:25.057 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:10:25.057 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:10:35.062 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:10:35.068 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:10:35.069 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:10:35.069 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:10:35.069 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:10:45.070 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:10:45.075 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:10:45.076 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:10:45.076 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:10:45.077 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:10:55.098 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:10:55.103 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:10:55.104 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:10:55.104 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:10:55.104 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:11:05.121 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:11:05.132 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:11:05.132 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:11:05.132 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:11:05.133 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:11:15.151 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:11:15.166 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:11:15.166 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:11:15.167 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:11:15.167 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:11:25.181 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:11:25.188 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:11:25.189 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:11:25.189 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:11:25.189 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:11:35.204 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:11:35.209 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:11:35.209 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:11:35.210 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:11:35.210 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:12:02.320 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:12:03.480 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:12:03.480 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:12:03.481 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:12:03.481 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:12:03.856 +03:00  ERR]  Failed executing DbCommand (13ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Identity].[Tenant] ([CreatedBy], [LastModifiedBy], [LastModifiedDate], [Status], [TenantName])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [Id], [CreatedDate]
FROM [Identity].[Tenant]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
[2022-10-30 19:12:03.914 +03:00  ERR]  An exception occurred in the database while saving changes for context type 'Identity.API.Data.IdentityContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): String or binary data would be truncated in table 'IdentityManager.Identity.Tenant', column 'TenantName'. Truncated value: 'Testing For the maximum length of 50 characters an'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:d628b94c-d4f7-4bf6-aca9-ab8e9f1da9f0
Error Number:2628,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): String or binary data would be truncated in table 'IdentityManager.Identity.Tenant', column 'TenantName'. Truncated value: 'Testing For the maximum length of 50 characters an'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:d628b94c-d4f7-4bf6-aca9-ab8e9f1da9f0
Error Number:2628,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
[2022-10-30 19:12:04.431 +03:00  ERR]  An error occurred while saving the entity changes. See the inner exception for details.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): String or binary data would be truncated in table 'IdentityManager.Identity.Tenant', column 'TenantName'. Truncated value: 'Testing For the maximum length of 50 characters an'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:d628b94c-d4f7-4bf6-aca9-ab8e9f1da9f0
Error Number:2628,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Identity.API.Infrastructure.UnitOfWork.CompleteAsync() in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Infrastructure\UnitOfWork.cs:line 38
   at Identity.API.Services.Implementations.AccountService.RegisterTenantAsync(RegisterRequestTenant request, String origin) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Services\Implementations\AccountService.cs:line 99
   at Identity.API.Controllers.AccountController.RegisterTenantAsync(RegisterRequestTenant request) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 59
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
[2022-10-30 19:12:04.526 +03:00  ERR]  An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.DeveloperMessage.Entries.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.Database.AutoTransactionsEnabled.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWriteAsObject(Utf8JsonWriter writer, Object value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCoreAsObject(Utf8JsonWriter writer, Object value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.JsonSerializer.WriteCore[TValue](JsonConverter jsonConverter, Utf8JsonWriter writer, TValue& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.JsonSerializer.WriteStreamAsync[TValue](Stream utf8Json, TValue value, JsonTypeInfo jsonTypeInfo, CancellationToken cancellationToken)
   at System.Text.Json.JsonSerializer.WriteStreamAsync[TValue](Stream utf8Json, TValue value, JsonTypeInfo jsonTypeInfo, CancellationToken cancellationToken)
   at System.Text.Json.JsonSerializer.WriteStreamAsync[TValue](Stream utf8Json, TValue value, JsonTypeInfo jsonTypeInfo, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeAlwaysRunResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
[2022-10-30 19:12:13.495 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:12:15.787 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:12:15.788 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:12:15.788 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:12:15.789 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:12:25.800 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:12:25.805 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:12:25.805 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:12:25.806 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:12:25.806 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:12:35.806 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:12:35.813 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:12:35.814 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:12:35.814 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:12:35.814 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:12:45.828 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:12:45.834 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:12:45.834 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:12:45.835 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:12:45.835 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:13:07.440 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:13:07.450 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:13:07.451 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:13:07.451 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:13:07.452 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:13:18.048 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:13:18.097 +03:00  ERR]  Failed executing DbCommand (47ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Identity].[Tenant] ([CreatedBy], [LastModifiedBy], [LastModifiedDate], [Status], [TenantName])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [Id], [CreatedDate]
FROM [Identity].[Tenant]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
[2022-10-30 19:13:18.106 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:13:18.107 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:13:18.107 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:13:18.107 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:13:18.107 +03:00  ERR]  An exception occurred in the database while saving changes for context type 'Identity.API.Data.IdentityContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): String or binary data would be truncated in table 'IdentityManager.Identity.Tenant', column 'TenantName'. Truncated value: 'Testing For the maximum length of 50 characters an'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:ec11e608-4c9e-45b9-a458-b1ed0489da8c
Error Number:2628,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): String or binary data would be truncated in table 'IdentityManager.Identity.Tenant', column 'TenantName'. Truncated value: 'Testing For the maximum length of 50 characters an'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:ec11e608-4c9e-45b9-a458-b1ed0489da8c
Error Number:2628,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
[2022-10-30 19:13:42.807 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:13:42.807 +03:00  ERR]  An error occurred while saving the entity changes. See the inner exception for details.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): String or binary data would be truncated in table 'IdentityManager.Identity.Tenant', column 'TenantName'. Truncated value: 'Testing For the maximum length of 50 characters an'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__203_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:ec11e608-4c9e-45b9-a458-b1ed0489da8c
Error Number:2628,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.<>c__DisplayClass33_0`2.<<ExecuteAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementationAsync[TState,TResult](Func`4 operation, Func`4 verifySucceeded, TState state, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Identity.API.Infrastructure.UnitOfWork.CompleteAsync() in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Infrastructure\UnitOfWork.cs:line 38
   at Identity.API.Services.Implementations.AccountService.RegisterTenantAsync(RegisterRequestTenant request, String origin) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Services\Implementations\AccountService.cs:line 99
   at Identity.API.Controllers.AccountController.RegisterTenantAsync(RegisterRequestTenant request) in C:\Chinchu\Nabina\ERP Projects\2022\NabinaGroupERP\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 59
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
[2022-10-30 19:13:42.822 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:13:43.413 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:13:43.560 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:13:43.560 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:13:55.410 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:14:10.034 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:14:10.689 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:14:11.230 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:14:11.231 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:14:15.883 +03:00  ERR]  An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.DeveloperMessage.Entries.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.ChangeTracker.Context.Database.AutoTransactionsEnabled.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWriteAsObject(Utf8JsonWriter writer, Object value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCoreAsObject(Utf8JsonWriter writer, Object value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.JsonSerializer.WriteCore[TValue](JsonConverter jsonConverter, Utf8JsonWriter writer, TValue& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.JsonSerializer.WriteStreamAsync[TValue](Stream utf8Json, TValue value, JsonTypeInfo jsonTypeInfo, CancellationToken cancellationToken)
   at System.Text.Json.JsonSerializer.WriteStreamAsync[TValue](Stream utf8Json, TValue value, JsonTypeInfo jsonTypeInfo, CancellationToken cancellationToken)
   at System.Text.Json.JsonSerializer.WriteStreamAsync[TValue](Stream utf8Json, TValue value, JsonTypeInfo jsonTypeInfo, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeAlwaysRunResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
[2022-10-30 19:14:22.789 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:14:24.467 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:14:24.468 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:14:24.468 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:14:24.469 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:15:57.052 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:15:57.277 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 19:15:57.352 +03:00  INF]  Initializing UI Database
[2022-10-30 19:15:58.183 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 19:15:58.510 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:15:59.654 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:15:59.658 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 19:15:59.720 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:15:59.721 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:16:09.722 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:16:09.780 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:16:09.780 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:16:09.785 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:16:09.785 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:16:19.799 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:16:19.845 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:16:19.846 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:16:19.846 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:16:19.846 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:16:29.867 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:16:29.879 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:16:29.879 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:16:29.880 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:16:29.880 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:16:39.886 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:16:39.895 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:16:39.896 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:16:39.896 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:16:39.896 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:16:53.759 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:16:53.992 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 19:16:54.069 +03:00  INF]  Initializing UI Database
[2022-10-30 19:16:54.912 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 19:16:55.189 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:16:56.303 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:16:56.307 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 19:16:56.366 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:16:56.367 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:17:06.379 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:17:06.434 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:17:06.435 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:17:06.439 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:17:06.439 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:17:16.462 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:17:16.511 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:17:16.511 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:17:16.512 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:17:16.512 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:17:26.523 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:17:26.532 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:17:26.533 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:17:26.533 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:17:26.533 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:17:36.539 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:17:36.549 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:17:36.549 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:17:36.550 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:17:36.550 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:17:46.572 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:17:46.587 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:17:46.587 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:17:46.588 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:17:46.588 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:17:56.595 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:17:56.605 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:17:56.605 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:17:56.606 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:17:56.606 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:18:06.612 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:18:06.624 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:18:06.624 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:18:06.625 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:18:06.625 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:18:16.629 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:18:16.640 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:18:16.640 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:18:16.641 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:18:16.641 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:18:26.647 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:18:26.656 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:18:26.657 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:18:26.657 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:18:26.657 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:18:36.670 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:18:36.680 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:18:36.680 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:18:36.680 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:18:36.681 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:18:46.694 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:18:46.705 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:18:46.705 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:18:46.705 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:18:46.705 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:18:56.723 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:18:56.744 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:18:56.744 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:18:56.744 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:18:56.745 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:19:06.753 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:19:06.758 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:19:06.759 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:19:06.759 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:19:06.759 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:19:16.769 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:19:16.780 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:19:16.781 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:19:16.782 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:19:16.782 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:19:26.795 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:19:26.807 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:19:26.807 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:19:26.808 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:19:26.808 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:19:36.816 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:19:36.821 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:19:36.822 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:19:36.822 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:19:36.823 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:19:46.835 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:19:46.840 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:19:46.840 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:19:46.840 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:19:46.841 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:19:56.868 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:19:56.877 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:19:56.878 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:19:56.878 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:19:56.878 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:20:06.890 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:20:06.907 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:20:06.908 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:20:06.908 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:20:06.908 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:20:16.924 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:20:16.930 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:20:16.930 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:20:16.931 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:20:16.931 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:20:26.939 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:20:26.947 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:20:26.947 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:20:26.948 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:20:26.948 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:20:36.952 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:20:36.958 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:20:36.958 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:20:36.959 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:20:36.959 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:20:46.974 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:20:46.979 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:20:46.979 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:20:46.979 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:20:46.980 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:20:57.003 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:20:57.016 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:20:57.017 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:20:57.017 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:20:57.017 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:21:07.029 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:21:07.035 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:21:07.035 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:21:07.036 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:21:07.036 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:21:17.043 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:21:17.053 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:21:17.053 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:21:17.053 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:21:17.054 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:21:27.060 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:21:27.065 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:21:27.065 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:21:27.065 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:21:27.066 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:21:37.073 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:21:37.087 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:21:37.087 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:21:37.088 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:21:37.088 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:21:50.105 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:21:50.292 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 19:21:50.368 +03:00  INF]  Initializing UI Database
[2022-10-30 19:21:51.296 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 19:21:51.662 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:21:52.919 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:21:52.923 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 19:21:52.989 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:21:52.990 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:22:02.998 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:22:03.035 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:22:03.036 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:22:03.040 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:22:03.040 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:22:13.053 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:22:13.101 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:22:13.102 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:22:13.102 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:22:13.102 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:22:23.110 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:22:23.123 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:22:23.123 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:22:23.123 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:22:23.124 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:22:33.144 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:22:33.154 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:22:33.155 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:22:33.155 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:22:33.155 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:22:43.159 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:22:43.169 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:22:43.170 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:22:43.170 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:22:43.170 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:22:53.180 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:22:53.197 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:22:53.198 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:22:53.198 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:22:53.198 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:23:03.204 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:23:03.214 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:23:03.215 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:23:03.215 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:23:03.215 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:23:13.239 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:23:13.249 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:23:13.250 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:23:13.250 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:23:13.250 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:23:23.262 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:23:23.272 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:23:23.272 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:23:23.272 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:23:23.273 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:23:33.286 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:23:33.295 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:23:33.295 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:23:33.296 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:23:33.296 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:23:43.316 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:23:43.326 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:23:43.326 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:23:43.327 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:23:43.327 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:23:53.349 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:23:53.373 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:23:53.373 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:23:53.374 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:23:53.374 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:24:03.393 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:24:03.409 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:24:03.410 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:24:03.411 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:24:03.411 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:24:13.417 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:24:13.422 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:24:13.422 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:24:13.422 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:24:13.423 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:24:20.449 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:24:20.662 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 19:24:20.739 +03:00  INF]  Initializing UI Database
[2022-10-30 19:24:21.558 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 19:24:21.859 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:24:23.013 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:24:23.017 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 19:24:23.079 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:24:23.080 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:24:33.099 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:24:33.136 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:24:33.137 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:24:33.141 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:24:33.141 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:24:43.154 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:24:43.200 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:24:43.201 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:24:43.202 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:24:43.203 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:24:53.212 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:24:53.224 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:24:53.225 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:24:53.225 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:24:53.225 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:25:21.885 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:25:22.129 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 19:25:22.206 +03:00  INF]  Initializing UI Database
[2022-10-30 19:25:23.034 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 19:25:23.306 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:25:24.452 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:25:24.456 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 19:25:24.517 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:25:24.518 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:25:34.535 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:25:34.583 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:25:34.584 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:25:34.589 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:25:34.589 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:25:44.606 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:25:44.653 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:25:44.653 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:25:44.654 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:25:44.654 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:25:54.668 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:25:54.685 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:25:54.686 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:25:54.686 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:25:54.686 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:26:04.699 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:26:04.705 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:26:04.706 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:26:04.706 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:26:04.706 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:26:14.714 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:26:14.721 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:26:14.721 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:26:14.722 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:26:14.722 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:26:24.737 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:26:24.743 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:26:24.743 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:26:24.744 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:26:24.744 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:26:34.745 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:26:34.751 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:26:34.751 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:26:34.752 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:26:34.752 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:26:44.764 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:26:44.769 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:26:44.770 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:26:44.771 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:26:44.771 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:26:54.787 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:26:54.793 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:26:54.793 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:26:54.794 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:26:54.794 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:27:04.823 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:27:04.828 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:27:04.828 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:27:04.828 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:27:04.829 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:27:14.846 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:27:14.851 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:27:14.851 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:27:14.852 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:27:14.852 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:27:24.858 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:27:24.874 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:27:24.875 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:27:24.875 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:27:24.876 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:27:34.891 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:27:34.898 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:27:34.899 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:27:34.899 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:27:34.899 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:27:44.912 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:27:44.921 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:27:44.922 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:27:44.922 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:27:44.922 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:27:54.938 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:27:54.943 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:27:54.943 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:27:54.944 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:27:54.944 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:28:04.953 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:28:04.958 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:28:04.959 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:28:04.959 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:28:04.959 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:28:14.976 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:28:14.983 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:28:14.984 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:28:14.984 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:28:14.984 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:28:25.010 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:28:25.015 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:28:25.015 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:28:25.016 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:28:25.016 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:28:35.020 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:28:35.026 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:28:35.026 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:28:35.026 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:28:35.027 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:28:45.045 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:28:45.050 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:28:45.051 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:28:45.051 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:28:45.051 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:28:55.058 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:28:55.064 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:28:55.064 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:28:55.065 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:28:55.065 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:29:05.071 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:29:05.077 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:29:05.077 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:29:05.078 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:29:05.078 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:29:15.097 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:29:15.104 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:29:15.105 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:29:15.105 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:29:15.105 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:29:25.107 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:29:25.123 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:29:25.124 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:29:25.124 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:29:25.124 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:29:35.135 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:29:35.140 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:29:35.141 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:29:35.141 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:29:35.141 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:29:45.157 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:29:45.162 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:29:45.163 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:29:45.163 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:29:45.163 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:29:55.172 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:29:55.178 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:29:55.179 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:29:55.179 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:29:55.179 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:30:05.194 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:30:05.199 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:30:05.200 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:30:05.200 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:30:05.200 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:30:15.213 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:30:15.218 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:30:15.218 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:30:15.219 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:30:15.219 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:30:25.237 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:30:25.242 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:30:25.242 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:30:25.243 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:30:25.243 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:31:11.025 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:31:11.278 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 19:31:11.351 +03:00  INF]  Initializing UI Database
[2022-10-30 19:31:12.188 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 19:31:12.454 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:31:13.582 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:31:13.586 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 19:31:13.659 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:31:13.661 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:31:23.670 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:31:23.708 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:31:23.709 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:31:23.713 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:31:23.714 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:31:38.987 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:31:39.035 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:31:39.036 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:31:39.036 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:31:39.036 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:31:49.040 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:31:49.053 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:31:49.053 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:31:49.054 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:31:49.054 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:31:59.068 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:31:59.078 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:31:59.079 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:31:59.080 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:31:59.080 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:32:31.988 +03:00  INF]  Configuring web host (Identity.API)...
[2022-10-30 19:32:32.203 +03:00  INF]  Starting web host (Identity.API)...
[2022-10-30 19:32:32.294 +03:00  INF]  Initializing UI Database
[2022-10-30 19:32:33.088 +03:00  INF]  Saving healthchecks configuration to database
[2022-10-30 19:32:33.380 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:32:34.498 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:32:34.502 +03:00  DBG]  Creating a new HealthReport history.
[2022-10-30 19:32:34.562 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:32:34.563 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:32:44.574 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:32:44.619 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:32:44.619 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:32:44.624 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:32:44.625 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:32:54.754 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:33:03.675 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:33:03.676 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:33:03.676 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:33:03.676 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:33:13.691 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:33:13.700 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:33:13.701 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:33:13.701 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:33:13.701 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
[2022-10-30 19:33:23.714 +03:00  DBG]  Executing HealthCheck collector HostedService.
[2022-10-30 19:33:23.722 +03:00  DBG]  HealthReportCollector - health report execution history saved.
[2022-10-30 19:33:23.723 +03:00  DBG]  HealthReport history already exists and is in the same state, updating the values.
[2022-10-30 19:33:23.723 +03:00  DBG]  HealthReportCollector has completed.
[2022-10-30 19:33:23.724 +03:00  DBG]  HealthCheck collector HostedService executed successfully.
